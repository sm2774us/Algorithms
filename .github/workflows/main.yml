name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup typescript and Deno
        run: |
          curl -fsSL https://deno.land/x/install/install.sh | sh

      - name: Run typescript tests
        run: |
          /home/runner/.deno/bin/deno test --allow-net

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
      
      - name: Run python tests
        run: |
          python run_all_tests.py          

      - name: Set up JDK 1.15
        uses: actions/setup-java@v1
        with:
          java-version: 1.15

      - uses: actions/setup-node@v1

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-
      - name: Build and Run Tests with Gradle
        run: |
          chmod a+x ./gradlew
          ./gradlew build test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
#      - name: Generate Javadoc
#        run: |
#          chmod a+x ./gradlew
#          ./gradlew javadocAggregate
#      - name: Deploy
#        uses: JamesIves/github-pages-deploy-action@3.5.9
#        with:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          BRANCH: gh-pages
#          CLEAN: true
#          FOLDER: build/docs/javadoc
#          TARGET_FOLDER: javadoc

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.15
        uses: actions/setup-java@v1
        with:
          java-version: 1.15

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-
      - name: 'Run tests with JaCoCo'
        shell: bash
        run: |
          chmod a+x ./gradlew
          ./gradlew --version
          ./gradlew --scan --no-parallel --stacktrace --warning-mode=all jacocoReport

      - uses: codecov/codecov-action@v1

  release-notes:
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: ".github/release-changelog-builder.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          draft: true
          files: |
            Algorithms-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}